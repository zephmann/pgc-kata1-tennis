{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","server","opponent","score","active","updateScore","bind","handleServerClick","handleOpponentClick","parseScore","resetGame","fetch","TENNIS_API_URL","then","res","json","data","setState","new_server","this","new_opponent","console","log","includes","button_grp","debug_text","active_text","id","className","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAgHeA,E,kDAvGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,OAAQ,EACRC,SAAU,EACVC,MAAO,MACPC,QAAQ,GAGV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,oBAAsB,EAAKA,oBAAoBF,KAAzB,gBAC3B,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBAdA,E,qDAiBnB,WAAqB,IAAD,OAElBK,MADYC,kCACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GACtC,EAAKC,SAAS,CAAEd,MAAOa,EAAKb,a,+BAIhC,WACE,IAAMe,EAAaC,KAAKnB,MAAMC,OAAS,EAEvCkB,KAAKF,SAAS,CACZhB,OAAQiB,IAGVC,KAAKd,YAAYa,EAAYC,KAAKnB,MAAME,Y,iCAG1C,WACE,IAAMkB,EAAeD,KAAKnB,MAAME,SAAW,EAE3CiB,KAAKF,SAAS,CACZf,SAAUkB,IAGZD,KAAKd,YAAYc,KAAKnB,MAAMC,OAAQmB,K,yBAGtC,SAAYnB,EAAQC,GAClBiB,KAAKF,SAAS,CACZd,MAAO,QAGTkB,QAAQC,IAAIrB,EAAS,IAAMC,GAO3BS,MAJEC,qBACYX,EACZ,aAAeC,GAENW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAAKM,KAAKV,c,wBAG/C,SAAWO,GACT,IAAMZ,GAAUY,EAAKb,MAAMoB,SAAS,QACpCJ,KAAKF,SAAS,CACZd,MAAOa,EAAKb,MACZC,OAAQA,M,uBAIZ,WACEe,KAAKF,SAAS,CACZhB,OAAQ,EACRC,SAAU,EACVC,MAAO,MACPC,QAAQ,IAGVe,KAAKd,YAAY,EAAG,K,oBAGtB,WACE,IAGImB,EAHEC,EAAaN,KAAKnB,MAAMC,OAAS,IAAMkB,KAAKnB,MAAME,SAClDwB,EAAcP,KAAKnB,MAAMI,OAAS,iBAAmB,eAU3D,OAPIe,KAAKnB,MAAMI,SACboB,EAAa,gCACX,qBAAKG,GAAG,SAASC,UAAU,MAAMC,QAASV,KAAKZ,kBAA/C,SAAkE,gDAClE,qBAAKoB,GAAG,WAAWC,UAAU,MAAMC,QAASV,KAAKX,oBAAjD,SAAsE,sDAKxE,sBAAKoB,UAAU,MAAf,UACE,8CACA,qBAAID,GAAG,QAAP,cAAiBR,KAAKnB,MAAMG,MAA5B,OACCqB,EACD,qBAAKG,GAAG,QAAQC,UAAU,MAAMC,QAASV,KAAKT,UAA9C,SAAyD,8CACzD,6BAAKe,IACL,6BAAKC,W,GAnGKI,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dfde8fe4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nconst TENNIS_API_URL = \"/api/score?\";\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      server: 0,\n      opponent: 0,\n      score: \"...\",\n      active: true\n    };\n\n    this.updateScore = this.updateScore.bind(this);\n    this.handleServerClick = this.handleServerClick.bind(this);\n    this.handleOpponentClick = this.handleOpponentClick.bind(this);\n    this.parseScore = this.parseScore.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  componentDidMount() {\n    const url = TENNIS_API_URL + \"server=0&opponent=0\";\n    fetch(url).then(res => res.json()).then(data => {\n      this.setState({ score: data.score })\n    });\n  }\n\n  handleServerClick() {\n    const new_server = this.state.server + 1;\n\n    this.setState({\n      server: new_server\n    });\n    \n    this.updateScore(new_server, this.state.opponent);\n  }\n\n  handleOpponentClick() {\n    const new_opponent = this.state.opponent + 1;\n\n    this.setState({\n      opponent: new_opponent\n    });\n    \n    this.updateScore(this.state.server, new_opponent);\n  }\n\n  updateScore(server, opponent) {\n    this.setState({\n      score: \"...\"\n    });\n\n    console.log(server + \" \" + opponent);\n\n    const url = (\n      TENNIS_API_URL + \n      \"server=\" + server + \n      \"&opponent=\" + opponent\n    );\n    fetch(url).then(res => res.json()).then(this.parseScore);\n  }\n\n  parseScore(data) {\n    const active = !data.score.includes(\"Game\");\n    this.setState({\n      score: data.score,\n      active: active\n    });\n  }\n\n  resetGame() {\n    this.setState({\n      server: 0,\n      opponent: 0,\n      score: \"...\",\n      active: true\n    });\n\n    this.updateScore(0, 0);\n  }\n\n  render() {\n    const debug_text = this.state.server + \" \" + this.state.opponent;\n    const active_text = this.state.active ? \"Game is active\" : \"Game is over\"\n\n    let button_grp;\n    if (this.state.active) {\n      button_grp = <div>\n        <div id=\"server\" className=\"btn\" onClick={this.handleServerClick}><h2>Point Server</h2></div>\n        <div id=\"opponent\" className=\"btn\" onClick={this.handleOpponentClick}><h2>Point Opponent</h2></div>\n      </div>;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Tennis Score</h1>\n        <h1 id=\"score\">\"{this.state.score}\"</h1>\n        {button_grp}\n        <div id=\"reset\" className=\"btn\" onClick={this.resetGame}><h2>Reset Game</h2></div>\n        <h1>{debug_text}</h1>\n        <h1>{active_text}</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}